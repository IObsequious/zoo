<?xml version="1.0" encoding="UTF-8"?>
<bgf:grammar xmlns:bgf="http://planet-sl.org/bgf">
	<bgf:production>
		<nonterminal>translation-unit</nonterminal>
		<bgf:expression>
			<optional>
				<bgf:expression>
					<nonterminal>declaration-seq</nonterminal>
				</bgf:expression>
			</optional>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>primary-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>literal</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>this</terminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>id-expression</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>id-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>unqualified-id</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>qualified-id</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>unqualified-id</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>operator-function-id</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>conversion-function-id</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>~</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>class-name</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>template-id</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>qualified-id</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>::</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>nested-name-specifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>template</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>unqualified-id</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>::</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>::</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>operator-function-id</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>::</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>template-id</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>nested-name-specifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>class-or-namespace-name</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>::</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>nested-name-specifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>class-or-namespace-name</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>::</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>template</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>nested-name-specifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>class-or-namespace-name</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>class-name</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>namespace-name</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>postfix-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>primary-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>postfix-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>postfix-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>expression-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>simple-type-specifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>expression-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>typename</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>::</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>nested-name-specifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>expression-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>typename</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>::</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>nested-name-specifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>template</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>template-id</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>expression-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>postfix-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>.</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>template</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>id-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>postfix-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>-&gt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>template</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>id-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>postfix-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>.</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>pseudo-destructor-name</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>postfix-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>-&gt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>pseudo-destructor-name</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>postfix-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>++</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>postfix-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>--</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>dynamic_cast</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&lt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-id</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&gt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>static_cast</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&lt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-id</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&gt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>reinterpret_cast</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&lt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-id</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&gt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>const_cast</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&lt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-id</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&gt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>typeid</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>typeid</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-id</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>expression-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>assignment-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>expression-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>assignment-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>pseudo-destructor-name</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>::</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>nested-name-specifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-name</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>::</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>~</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-name</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>::</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>nested-name-specifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>template</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>template-id</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>::</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>~</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-name</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>::</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>nested-name-specifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>~</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-name</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>unary-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>postfix-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>++</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>cast-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>--</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>cast-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>unary-operator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>cast-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>sizeof</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>unary-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>sizeof</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-id</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>new-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>delete-expression</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>unary-operator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>*</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&amp;</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>+</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>-</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>!</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>~</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>new-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>::</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>new</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>new-placement</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>new-type-id</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>new-initializer</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>::</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>new</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>new-placement</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-id</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>new-initializer</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>new-placement</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>expression-list</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>new-type-id</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>type-specifier-seq</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>new-declarator</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>new-declarator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>ptr-operator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>new-declarator</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>direct-new-declarator</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>direct-new-declarator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>direct-new-declarator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>constant-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>new-initializer</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>expression-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>delete-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>::</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>delete</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>cast-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>::</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>delete</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>cast-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>cast-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>unary-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-id</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>cast-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>pm-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>cast-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>pm-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>.*</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>cast-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>pm-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>-&gt;*</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>cast-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>multiplicative-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>pm-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>multiplicative-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>*</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>pm-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>multiplicative-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>/</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>pm-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>multiplicative-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>%</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>pm-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>additive-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>multiplicative-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>additive-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>+</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>multiplicative-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>additive-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>-</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>multiplicative-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>shift-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>additive-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>shift-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&lt;&lt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>additive-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>shift-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&gt;&gt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>additive-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>relational-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>shift-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>relational-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&lt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>shift-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>relational-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&gt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>shift-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>relational-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&lt;=</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>shift-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>relational-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&gt;=</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>shift-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>equality-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>relational-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>equality-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>==</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>relational-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>equality-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>!=</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>relational-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>and-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>equality-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>and-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&amp;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>equality-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>exclusive-or-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>and-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>exclusive-or-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>^</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>and-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>inclusive-or-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>exclusive-or-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>inclusive-or-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>|</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>exclusive-or-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>logical-and-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>inclusive-or-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>logical-and-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&amp;&amp;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>inclusive-or-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>logical-or-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>logical-and-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>logical-or-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>||</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>logical-and-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>conditional-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>logical-or-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>logical-or-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>?</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>:</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>assignment-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>assignment-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>conditional-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>logical-or-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>assignment-operator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>assignment-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>throw-expression</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>assignment-operator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>*=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>/=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>%=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>+=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>-=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&gt;&gt;=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&lt;&lt;=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&amp;=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>^=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>|=</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>assignment-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>assignment-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>constant-expression</nonterminal>
		<bgf:expression>
			<nonterminal>conditional-expression</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>statement</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>labeled-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>expression-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>compound-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>selection-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>iteration-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>jump-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>declaration-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>try-block</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>labeled-statement</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>:</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>statement</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>case</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>constant-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>:</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>statement</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>default</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>:</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>statement</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>expression-statement</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>compound-statement</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>{</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>statement-seq</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>}</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>statement-seq</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>statement-seq</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>statement</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>selection-statement</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>if</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>condition</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>statement</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>if</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>condition</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>statement</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>else</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>statement</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>switch</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>condition</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>statement</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>condition</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>type-specifier-seq</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>declarator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>=</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>assignment-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>iteration-statement</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>while</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>condition</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>statement</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>do</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>statement</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>while</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>for</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>for-init-statement</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>condition</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>expression</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>statement</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>for-init-statement</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>expression-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>simple-declaration</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>jump-statement</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>break</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>continue</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>return</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>expression</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>goto</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>declaration-statement</nonterminal>
		<bgf:expression>
			<nonterminal>block-declaration</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>declaration-seq</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>declaration-seq</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>declaration</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>declaration</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>block-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>function-definition</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>template-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>explicit-instantiation</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>explicit-specialization</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>linkage-specification</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>namespace-definition</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>block-declaration</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>simple-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>asm-definition</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>namespace-alias-definition</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>using-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>using-directive</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>simple-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>decl-specifier-seq</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>init-declarator-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>decl-specifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>storage-class-specifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type-specifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>function-specifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>friend</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>typedef</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>decl-specifier-seq</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>decl-specifier-seq</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>decl-specifier</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>storage-class-specifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>auto</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>register</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>static</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>extern</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>mutable</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>function-specifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>inline</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>virtual</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>explicit</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>typedef-name</nonterminal>
		<bgf:expression>
			<nonterminal>identifier</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>type-specifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>simple-type-specifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>class-specifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>enum-specifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>elaborated-type-specifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>cv-qualifier</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>simple-type-specifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>::</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>nested-name-specifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-name</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>::</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>nested-name-specifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>template</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>template-id</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<terminal>char</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>wchar_t</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>bool</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>short</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>int</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>long</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>signed</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>unsigned</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>float</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>double</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>void</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>type-name</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>class-name</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>enum-name</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>typedef-name</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>elaborated-type-specifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>class-key</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>::</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>nested-name-specifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>enum</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>::</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>nested-name-specifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>typename</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>::</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>nested-name-specifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>typename</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>::</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>nested-name-specifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>template</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>template-id</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>enum-name</nonterminal>
		<bgf:expression>
			<nonterminal>identifier</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>enum-specifier</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>enum</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>{</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>enumerator-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>}</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>enumerator-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>enumerator-definition</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>enumerator-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>enumerator-definition</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>enumerator-definition</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>enumerator</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>enumerator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>=</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>constant-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>enumerator</nonterminal>
		<bgf:expression>
			<nonterminal>identifier</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>namespace-name</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>original-namespace-name</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>namespace-alias</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>original-namespace-name</nonterminal>
		<bgf:expression>
			<nonterminal>identifier</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>namespace-definition</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>named-namespace-definition</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>unnamed-namespace-definition</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>named-namespace-definition</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>original-namespace-definition</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>extension-namespace-definition</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>original-namespace-definition</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>namespaceidentifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>{</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>namespace-body</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>}</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>extension-namespace-definition</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>namespace</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>original-namespace-name</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>{</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>namespace-body</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>}</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>unnamed-namespace-definition</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>namespace</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>{</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>namespace-body</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>}</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>namespace-body</nonterminal>
		<bgf:expression>
			<optional>
				<bgf:expression>
					<nonterminal>declaration-seq</nonterminal>
				</bgf:expression>
			</optional>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>namespace-alias</nonterminal>
		<bgf:expression>
			<nonterminal>identifier</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>namespace-alias-definition</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>namespace</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>=</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>qualified-namespace-specifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>qualified-namespace-specifier</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<terminal>::</terminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>nested-name-specifier</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>namespace-name</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>using-declaration</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>using</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>typename</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>::</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>nested-name-specifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>unqualified-id</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>using</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>::</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>unqualified-id</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>using-directive</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>using</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>namespace</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<terminal>::</terminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>nested-name-specifier</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>namespace-name</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>asm-definition</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>asm</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>string-literal</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>linkage-specification</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>extern</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>string-literal</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>{</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>declaration-seq</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>}</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>extern</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>string-literal</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>declaration</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>init-declarator-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>init-declarator</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>init-declarator-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>init-declarator</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>init-declarator</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>declarator</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>initializer</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>declarator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>direct-declarator</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>ptr-operator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>declarator</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>direct-declarator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>declarator-id</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>direct-declarator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>parameter-declaration-clause</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>cv-qualifier-seq</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>exception-specification</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>direct-declarator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>constant-expression</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>declarator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>ptr-operator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>*</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>cv-qualifier-seq</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<terminal>&amp;</terminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>::</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>nested-name-specifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>*</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>cv-qualifier-seq</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>cv-qualifier-seq</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>cv-qualifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>cv-qualifier-seq</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>cv-qualifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>const</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>volatile</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>declarator-id</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>id-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>::</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>nested-name-specifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-name</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>type-id</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>type-specifier-seq</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>abstract-declarator</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>type-specifier-seq</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>type-specifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>type-specifier-seq</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>abstract-declarator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>ptr-operator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>abstract-declarator</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>direct-abstract-declarator</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>direct-abstract-declarator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>direct-abstract-declarator</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>parameter-declaration-clause</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>cv-qualifier-seq</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>exception-specification</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>direct-abstract-declarator</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>constant-expression</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>abstract-declarator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>parameter-declaration-clause</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>parameter-declaration-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>...</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>parameter-declaration-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>...</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>parameter-declaration-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>parameter-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>parameter-declaration-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>parameter-declaration</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>parameter-declaration</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>decl-specifier-seq</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>declarator</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>decl-specifier-seq</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>declarator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>=</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>assignment-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>decl-specifier-seq</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>abstract-declarator</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>decl-specifier-seq</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>abstract-declarator</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>=</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>assignment-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>function-definition</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>decl-specifier-seq</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>declarator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>ctor-initializer</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>function-body</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>decl-specifier-seq</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>declarator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>function-try-block</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>function-body</nonterminal>
		<bgf:expression>
			<nonterminal>compound-statement</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>initializer</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>=</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>initializer-clause</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>initializer-clause</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>assignment-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>{</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>initializer-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>,</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>}</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>{</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>}</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>initializer-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>initializer-clause</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>initializer-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>initializer-clause</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>class-name</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>template-id</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>class-specifier</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>class-head</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>{</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>member-specification</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>}</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>class-head</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>class-key</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>identifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>base-clause</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>class-key</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>nested-name-specifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>base-clause</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>class-key</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>nested-name-specifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>template-id</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>base-clause</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>class-key</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>class</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>struct</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>union</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>member-specification</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>member-declaration</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>member-specification</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>access-specifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>:</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>member-specification</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>member-declaration</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>decl-specifier-seq</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>member-declarator-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>function-definition</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>;</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>::</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>nested-name-specifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>template</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>unqualified-id</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>using-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>template-declaration</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>member-declarator-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>member-declarator</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>member-declarator-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>member-declarator</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>member-declarator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>declarator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>pure-specifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>declarator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>constant-initializer</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>identifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>:</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>constant-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>pure-specifier</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>0</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>constant-initializer</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>=</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>constant-expression</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>base-clause</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>:</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>base-specifier-list</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>base-specifier-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>base-specifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>base-specifier-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>base-specifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>base-specifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>::</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>nested-name-specifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>class-name</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>virtual</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>access-specifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>::</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>nested-name-specifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>class-name</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>access-specifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>virtual</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>::</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>nested-name-specifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>class-name</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>access-specifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>private</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>protected</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>public</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>conversion-function-id</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>operator</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>conversion-type-id</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>conversion-type-id</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>type-specifier-seq</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>conversion-declarator</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>conversion-declarator</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>ptr-operator</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>conversion-declarator</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>ctor-initializer</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>:</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>mem-initializer-list</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>mem-initializer-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>mem-initializer</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>mem-initializer</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>mem-initializer-list</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>mem-initializer</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>mem-initializer-id</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>expression-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>mem-initializer-id</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>::</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>nested-name-specifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>class-name</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>operator-function-id</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>operator</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>operator</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>operator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>new</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>delete</terminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>new</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>delete</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<terminal>+</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>-</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>*</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>/</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>%</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>^</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&amp;</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>|</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>~</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>!</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&lt;</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&gt;</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>+=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>-=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>*=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>/=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>%=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>^=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&amp;=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>|=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&lt;&lt;</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&gt;&gt;</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&gt;&gt;=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&lt;&lt;=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>==</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>!=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&lt;=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&gt;=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&amp;&amp;</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>||</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>++</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>--</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>,</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>-&gt;*</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>-&gt;</terminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>template-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<terminal>export</terminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>template</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&lt;</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>template-parameter-list</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&gt;</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>declaration</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>template-parameter-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>template-parameter</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>template-parameter-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>template-parameter</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>template-parameter</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>type-parameter</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>parameter-declaration</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>type-parameter</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>class</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>identifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>class</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>identifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>=</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-id</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>typename</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>identifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>typename</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>identifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>=</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-id</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>template</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&lt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>template-parameter-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&gt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>class</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>identifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>template</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&lt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>template-parameter-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&gt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>class</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>identifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>=</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>id-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>template-id</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>template-name</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&lt;</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>template-argument-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>&gt;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>template-name</nonterminal>
		<bgf:expression>
			<nonterminal>identifier</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>template-argument-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>template-argument</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>template-argument-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>template-argument</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>template-argument</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>assignment-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type-id</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>id-expression</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>explicit-instantiation</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>template</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>declaration</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>explicit-specialization</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>template</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&lt;</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&gt;</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>declaration</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>try-block</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>try</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>compound-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>handler-seq</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>function-try-block</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>try</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>ctor-initializer</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>function-body</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>handler-seq</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>handler-seq</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>handler</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>handler-seq</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>handler</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>catch</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>exception-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>compound-statement</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>exception-declaration</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>type-specifier-seq</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>declarator</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>type-specifier-seq</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>abstract-declarator</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type-specifier-seq</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>...</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>throw-expression</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>throw</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>assignment-expression</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>exception-specification</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>throw</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>type-id-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>type-id-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>type-id</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>type-id-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-id</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>keyword</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>new</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>delete</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>and</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>bitand</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>bitor</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>compl</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>not</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>or</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>xor</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>enum</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>try</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>namespace</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>template</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>case</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>default</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>using</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>throw</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>break</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>continue</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>return</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>goto</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>char</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>bool</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>short</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>int</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>long</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>signed</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>unsigned</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>float</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>double</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>void</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>extern</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>private</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>protected</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>public</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>export</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>typename</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>typeid</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>if</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>else</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>switch</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>virtual</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>sizeof</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>friend</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>typedef</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>catch</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>auto</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>register</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>static</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>mutable</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>asm</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>while</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>do</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>for</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>inline</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>explicit</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>const</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>volatile</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>class</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>struct</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>union</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>this</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>operator</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
</bgf:grammar>
