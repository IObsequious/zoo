<?xml version="1.0" encoding="UTF-8"?>
<xbgf:sequence xmlns:xbgf="http://planet-sl.org/xbgf" xmlns:bgf="http://planet-sl.org/bgf">
<!-- this is a patch -->
	<xbgf:replace>
		<bgf:expression>
			<nonterminal>EPSILON</nonterminal>
		</bgf:expression>
		<bgf:expression>
			<epsilon/>
		</bgf:expression>
	</xbgf:replace>
<!-- this is an elimination (transformations normalise anyway) -->
	<xbgf:replace>
		<bgf:expression>
			<nonterminal>EOF</nonterminal>
		</bgf:expression>
		<bgf:expression>
			<epsilon/>
		</bgf:expression>
	</xbgf:replace>
<!-- this is a walkaround for not having negative character classes -->
	<xbgf:replace>
		<bgf:expression>
			<nonterminal>BGF_STRING</nonterminal>
		</bgf:expression>
		<bgf:expression>
			<value>string</value>
		</bgf:expression>
	</xbgf:replace>
<!-- this nonterminal was introduced by a semantic action hack -->
	<xbgf:define>
		<bgf:production>
			<nonterminal>TRIPLE_DOT</nonterminal>
			<bgf:expression>
				<terminal>...</terminal>
			</bgf:expression>
		</bgf:production>
	</xbgf:define>
<!-- this is a minor simplification (as for NUM_INT), otherwise a proper definition -->
	<xbgf:define>
		<bgf:production>
			<nonterminal>NUM_LONG</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<value>int</value>
					</bgf:expression>
					<bgf:expression>
						<choice>
							<bgf:expression>
								<terminal>l</terminal>
							</bgf:expression>
							<bgf:expression>
								<terminal>L</terminal>
							</bgf:expression>
						</choice>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</xbgf:define>
<!-- simplification because NUM_INT is too complicated and idiosyncratic -->
	<xbgf:define>
		<bgf:production>
			<nonterminal>NUM_FLOAT</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<value>int</value>
					</bgf:expression>
					<bgf:expression>
						<optional>
							<bgf:expression>
								<nonterminal>EXPONENT</nonterminal>
							</bgf:expression>
						</optional>
					</bgf:expression>
					<bgf:expression>
						<choice>
							<bgf:expression>
								<terminal>f</terminal>
							</bgf:expression>
							<bgf:expression>
								<terminal>F</terminal>
							</bgf:expression>
						</choice>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</xbgf:define>
<!-- simplification because NUM_INT is too complicated and idiosyncratic -->
	<xbgf:define>
		<bgf:production>
			<nonterminal>NUM_DOUBLE</nonterminal>
			<bgf:expression>
				<sequence>
					<bgf:expression>
						<value>int</value>
					</bgf:expression>
					<bgf:expression>
						<optional>
							<bgf:expression>
								<nonterminal>EXPONENT</nonterminal>
							</bgf:expression>
						</optional>
					</bgf:expression>
					<bgf:expression>
						<optional>
							<bgf:expression>
								<choice>
									<bgf:expression>
										<terminal>d</terminal>
									</bgf:expression>
									<bgf:expression>
										<terminal>D</terminal>
									</bgf:expression>
								</choice>
							</bgf:expression>
						</optional>
					</bgf:expression>
				</sequence>
			</bgf:expression>
		</bgf:production>
	</xbgf:define>
</xbgf:sequence>
