<?xml version="1.0" encoding="UTF-8"?>

<xns1:grammar xmlns:xns1="http://planet-sl.org/bgf">
  <xns1:production>
    <nonterminal>primary-expression</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>identifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>constant</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>string-literal</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>postfix-expression</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>primary-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>postfix-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>[</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>]</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>postfix-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>argument-expression-list</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>postfix-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>.</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>identifier</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>postfix-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>-&gt;</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>identifier</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>postfix-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>++</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>postfix-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>--</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>type-name</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>{</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>initializer-list</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>}</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>type-name</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>{</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>initializer-list</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>,</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>}</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>argument-expression-list</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>assignment-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>argument-expression-list</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>,</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>assignment-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>unary-expression</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>postfix-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>++</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>unary-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>--</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>unary-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>unary-operator</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>cast-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>sizeof</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>unary-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>sizeof</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>type-name</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>unary-operator</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>&#38;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>*</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>+</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>-</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>~</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>!</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>cast-expression</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>unary-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>type-name</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>cast-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>multiplicative-expression</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>cast-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>multiplicative-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>*</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>cast-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>multiplicative-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>/</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>cast-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>multiplicative-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>%</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>cast-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>additive-expression</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>multiplicative-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>additive-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>+</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>multiplicative-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>additive-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>-</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>multiplicative-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>shift-expression</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>additive-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>shift-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>&lt;&lt;</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>additive-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>shift-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>&gt;&gt;</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>additive-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>relational-expression</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>shift-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>relational-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>&lt;</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>shift-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>relational-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>&gt;</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>shift-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>relational-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>&lt;=</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>shift-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>relational-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>&gt;=</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>shift-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>equality-expression</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>relational-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>equality-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>==</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>relational-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>equality-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>!=</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>relational-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>AND-expression</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>equality-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>AND-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>&#38;</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>equality-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>exclusive-OR-expression</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>AND-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>exclusive-OR-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>^</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>AND-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>inclusive-OR-expression</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>exclusive-OR-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>inclusive-OR-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>|</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>exclusive-OR-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>logical-AND-expression</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>inclusive-OR-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>logical-AND-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>&#38;&#38;</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>inclusive-OR-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>logical-OR-expression</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>logical-AND-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>logical-OR-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>||</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>logical-AND-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>conditional-expression</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>logical-OR-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>logical-OR-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>?</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>:</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>conditional-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>assignment-expression</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>conditional-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>unary-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>assignment-operator</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>assignment-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>assignment-operator</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>*=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>/=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>%=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>+=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>-=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&lt;&lt;=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&gt;&gt;=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&#38;=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>^=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>|=</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>expression</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>assignment-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>,</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>assignment-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>constant-expression</nonterminal>
    <xns1:expression>
      <nonterminal>conditional-expression</nonterminal>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>declaration</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>declaration-specifiers</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>init-declarator-list</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>;</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>declaration-specifiers</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>storage-class-specifier</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>declaration-specifiers</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>type-specifier</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>declaration-specifiers</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>type-qualifier</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>declaration-specifiers</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>function-specifier</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>declaration-specifiers</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>init-declarator-list</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>init-declarator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>init-declarator-list</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>,</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>init-declarator</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>init-declarator</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>declarator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>declarator</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>=</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>initializer</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>storage-class-specifier</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>typedef</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>extern</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>static</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>auto</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>register</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>type-specifier</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>void</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>char</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>short</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>int</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>long</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>float</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>double</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>signed</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>unsigned</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>_Bool</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>_Complex</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>struct-or-union-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>enum-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>typedef-name</nonterminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>struct-or-union-specifier</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>struct-or-union</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>identifier</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>{</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>struct-declaration-list</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>}</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>struct-or-union</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>identifier</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>struct-or-union</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>struct</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>union</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>struct-declaration-list</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>struct-declaration</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>struct-declaration-list</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>struct-declaration</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>struct-declaration</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>specifier-qualifier-list</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>struct-declarator-list</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>;</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>specifier-qualifier-list</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>type-specifier</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>specifier-qualifier-list</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>type-qualifier</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>specifier-qualifier-list</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>struct-declarator-list</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>struct-declarator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>struct-declarator-list</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>,</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>struct-declarator</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>struct-declarator</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>declarator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>declarator</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>:</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>constant-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>enum-specifier</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>enum</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>identifier</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>{</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>enumerator-list</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>}</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>enum</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>identifier</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>{</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>enumerator-list</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>,</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>}</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>enum</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>identifier</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>enumerator-list</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>enumerator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>enumerator-list</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>,</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>enumerator</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>enumerator</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>enumeration-constant</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>enumeration-constant</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>=</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>constant-expression</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>type-qualifier</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>const</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>restrict</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>volatile</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>function-specifier</nonterminal>
    <xns1:expression>
      <terminal>inline</terminal>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>declarator</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>pointer</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>direct-declarator</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>direct-declarator</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>identifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>declarator</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>direct-declarator</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>[</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>type-qualifier-list</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>assignment-expression</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>]</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>direct-declarator</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>[</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>static</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>type-qualifier-list</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>assignment-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>]</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>direct-declarator</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>[</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>type-qualifier-list</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>static</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>assignment-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>]</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>direct-declarator</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>[</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>type-qualifier-list</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>*</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>]</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>direct-declarator</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>parameter-type-list</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>direct-declarator</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>identifier-list</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>pointer</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>*</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>type-qualifier-list</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>*</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>type-qualifier-list</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>pointer</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>type-qualifier-list</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>type-qualifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>type-qualifier-list</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>type-qualifier</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>parameter-type-list</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>parameter-list</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>parameter-list</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>,</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>...</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>parameter-list</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>parameter-declaration</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>parameter-list</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>,</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>parameter-declaration</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>parameter-declaration</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>declaration-specifiers</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>declarator</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>declaration-specifiers</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>abstract-declarator</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>identifier-list</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>identifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>identifier-list</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>,</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>identifier</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>type-name</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>specifier-qualifier-list</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>abstract-declarator</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>abstract-declarator</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>pointer</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>pointer</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>direct-abstract-declarator</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>direct-abstract-declarator</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>abstract-declarator</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>direct-abstract-declarator</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>[</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>type-qualifier-list</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>assignment-expression</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>]</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>direct-abstract-declarator</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>[</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>static</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>type-qualifier-list</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>assignment-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>]</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>direct-abstract-declarator</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>[</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>type-qualifier-list</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>static</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>assignment-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>]</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>direct-abstract-declarator</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>[</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>*</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>]</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>direct-abstract-declarator</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>parameter-type-list</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>typedef-name</nonterminal>
    <xns1:expression>
      <nonterminal>identifier</nonterminal>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>initializer</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>assignment-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>{</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>initializer-list</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>}</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>{</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>initializer-list</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>,</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>}</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>initializer-list</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>designation</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>initializer</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>initializer-list</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>,</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>designation</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>initializer</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>designation</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>designator-list</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>=</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>designator-list</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>designator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>designator-list</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>designator</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>designator</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>[</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>constant-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>]</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>.</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>identifier</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>statement</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>labeled-statement</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>compound-statement</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>expression-statement</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>selection-statement</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>iteration-statement</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>jump-statement</nonterminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>labeled-statement</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>identifier</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>:</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>statement</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>case</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>constant-expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>:</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>statement</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>default</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>:</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>statement</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>compound-statement</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>{</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>block-item-list</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>}</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>block-item-list</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>block-item</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>block-item-list</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>block-item</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>block-item</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>declaration</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>statement</nonterminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>expression-statement</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>expression</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>;</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>selection-statement</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>if</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>statement</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>if</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>statement</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>else</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>statement</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>switch</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>statement</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>iteration-statement</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>while</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>statement</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>do</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>statement</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>while</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>;</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>for</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>expression</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>;</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>expression</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>;</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>expression</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>statement</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>for</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>declaration</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>expression</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>;</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>expression</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>statement</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>jump-statement</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>goto</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>identifier</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>;</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>continue</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>;</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>break</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>;</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>return</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <nonterminal>expression</nonterminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>;</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>translation-unit</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>external-declaration</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>translation-unit</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>external-declaration</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>external-declaration</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>function-definition</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>declaration</nonterminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>function-definition</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>declaration-specifiers</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>declarator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>declaration-list</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>compound-statement</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>declaration-list</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>declaration</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>declaration-list</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>declaration</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>keyword</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>auto</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>break</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>case</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>char</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>const</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>continue</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>default</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>do</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>double</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>else</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>enum</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>extern</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>float</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>for</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>goto</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>if</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>inline</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>int</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>long</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>register</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>restrict</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>return</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>short</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>signed</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>sizeof</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>static</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>struct</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>switch</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>typedef</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>union</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>unsigned</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>void</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>volatile</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>while</nonterminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
</xns1:grammar>