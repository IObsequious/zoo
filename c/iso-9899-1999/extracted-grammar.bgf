<?xml version="1.0" encoding="UTF-8"?>
<bgf:grammar xmlns:bgf="http://planet-sl.org/bgf">
	<bgf:production>
		<nonterminal>primary-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>constant</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>string-literal</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>postfix-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>primary-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>postfix-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>postfix-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>argument-expression-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>postfix-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>.</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>postfix-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>-&gt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>postfix-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>++</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>postfix-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>--</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-name</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>{</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>initializer-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>}</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-name</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>{</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>initializer-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>}</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>argument-expression-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>assignment-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>argument-expression-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>assignment-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>unary-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>postfix-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>++</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>unary-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>--</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>unary-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>unary-operator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>cast-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>sizeof</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>unary-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>sizeof</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-name</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>unary-operator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>&amp;</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>*</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>+</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>-</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>~</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>!</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>cast-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>unary-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-name</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>cast-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>multiplicative-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>cast-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>multiplicative-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>*</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>cast-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>multiplicative-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>/</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>cast-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>multiplicative-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>%</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>cast-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>additive-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>multiplicative-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>additive-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>+</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>multiplicative-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>additive-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>-</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>multiplicative-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>shift-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>additive-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>shift-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&lt;&lt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>additive-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>shift-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&gt;&gt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>additive-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>relational-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>shift-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>relational-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&lt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>shift-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>relational-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&gt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>shift-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>relational-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&lt;=</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>shift-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>relational-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&gt;=</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>shift-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>equality-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>relational-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>equality-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>==</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>relational-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>equality-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>!=</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>relational-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>AND-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>equality-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>AND-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&amp;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>equality-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>exclusive-OR-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>AND-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>exclusive-OR-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>^</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>AND-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>inclusive-OR-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>exclusive-OR-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>inclusive-OR-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>|</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>exclusive-OR-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>logical-AND-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>inclusive-OR-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>logical-AND-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&amp;&amp;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>inclusive-OR-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>logical-OR-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>logical-AND-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>logical-OR-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>||</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>logical-AND-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>conditional-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>logical-OR-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>logical-OR-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>?</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>:</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>conditional-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>assignment-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>conditional-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>unary-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>assignment-operator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>assignment-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>assignment-operator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>*=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>/=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>%=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>+=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>-=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&lt;&lt;=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&gt;&gt;=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&amp;=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>^=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>|=</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>assignment-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>assignment-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>constant-expression</nonterminal>
		<bgf:expression>
			<nonterminal>conditional-expression</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>declaration-specifiers</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>init-declarator-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>declaration-specifiers</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>storage-class-specifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>declaration-specifiers</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>type-specifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>declaration-specifiers</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>type-qualifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>declaration-specifiers</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>function-specifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>declaration-specifiers</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>init-declarator-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>init-declarator</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>init-declarator-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>init-declarator</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>init-declarator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>declarator</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>declarator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>=</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>initializer</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>storage-class-specifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>typedef</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>extern</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>static</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>auto</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>register</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>type-specifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>void</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>char</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>short</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>int</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>long</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>float</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>double</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>signed</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>unsigned</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>_Bool</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>_Complex</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>_Imaginary</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>struct-or-union-specifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>enum-specifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>typedef-name</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>struct-or-union-specifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>struct-or-union</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>identifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>{</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>struct-declaration-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>}</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>struct-or-union</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>struct-or-union</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>struct</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>union</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>struct-declaration-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>struct-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>struct-declaration-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>struct-declaration</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>struct-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>specifier-qualifier-list</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>struct-declarator-list</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>specifier-qualifier-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>type-specifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>specifier-qualifier-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>type-qualifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>specifier-qualifier-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>struct-declarator-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>struct-declarator</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>struct-declarator-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>struct-declarator</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>struct-declarator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>declarator</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>declarator</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>:</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>constant-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>enum-specifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>enum</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>identifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>{</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>enumerator-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>}</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>enum</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>identifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>{</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>enumerator-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>}</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>enum</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>enumerator-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>enumerator</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>enumerator-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>enumerator</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>enumerator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>enumeration-constant</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>enumeration-constant</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>=</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>constant-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>type-qualifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>const</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>restrict</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>volatile</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>function-specifier</nonterminal>
		<bgf:expression>
			<terminal>inline</terminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>declarator</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>pointer</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>direct-declarator</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>direct-declarator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>declarator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>direct-declarator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>type-qualifier-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>assignment-expression</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>direct-declarator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>static</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>type-qualifier-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>assignment-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>direct-declarator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-qualifier-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>static</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>assignment-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>direct-declarator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>type-qualifier-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>*</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>direct-declarator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>parameter-type-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>direct-declarator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>identifier-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>pointer</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>*</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>type-qualifier-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>*</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>type-qualifier-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>pointer</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>type-qualifier-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>type-qualifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>type-qualifier-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-qualifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>parameter-type-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>parameter-list</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>parameter-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>...</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>parameter-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>parameter-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>parameter-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>parameter-declaration</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>parameter-declaration</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>declaration-specifiers</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>declarator</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>declaration-specifiers</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>abstract-declarator</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>identifier-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>identifier-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>type-name</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>specifier-qualifier-list</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>abstract-declarator</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>abstract-declarator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>pointer</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>pointer</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>direct-abstract-declarator</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>direct-abstract-declarator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>abstract-declarator</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>direct-abstract-declarator</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>assignment-expression</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>direct-abstract-declarator</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>*</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>direct-abstract-declarator</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>parameter-type-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>typedef-name</nonterminal>
		<bgf:expression>
			<nonterminal>identifier</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>initializer</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>assignment-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>{</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>initializer-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>}</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>{</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>initializer-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>}</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>initializer-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>designation</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>initializer</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>initializer-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>designation</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>initializer</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>designation</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>designator-list</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>=</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>designator-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>designator</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>designator-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>designator</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>designator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>constant-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>.</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>statement</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>labeled-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>compound-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>expression-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>selection-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>iteration-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>jump-statement</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>labeled-statement</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>:</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>statement</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>case</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>constant-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>:</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>statement</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>default</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>:</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>statement</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>compound-statement</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>{</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>block-item-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>}</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>block-item-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>block-item</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>block-item-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>block-item</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>block-item</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>statement</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>expression-statement</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>selection-statement</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>if</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>statement</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>if</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>statement</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>else</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>statement</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>switch</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>statement</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>iteration-statement</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>while</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>statement</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>do</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>statement</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>while</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>for</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>expression</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>expression</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>expression</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>statement</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>for</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>declaration</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>expression</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>expression</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>statement</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>jump-statement</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>goto</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>continue</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>break</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>return</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>expression</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>translation-unit</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>external-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>translation-unit</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>external-declaration</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>external-declaration</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>function-definition</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>declaration</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>function-definition</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>declaration-specifiers</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>declarator</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>declaration-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>compound-statement</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>declaration-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>declaration-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>declaration</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>keyword</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>auto</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>break</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>case</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>char</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>const</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>continue</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>default</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>do</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>double</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>else</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>enum</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>extern</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>float</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>for</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>goto</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>if</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>inline</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>int</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>long</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>register</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>restrict</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>return</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>short</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>signed</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>sizeof</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>static</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>struct</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>switch</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>typedef</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>union</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>unsigned</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>void</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>volatile</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>while</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
</bgf:grammar>
