A.2 Phrasestructuregrammar 
A.2.1 Expressions 
(6.5.1) primary-expression: 
identiﬁer 
constant 
string-literal 
(expression ) 
(6.5.2) postﬁx-expression: 
primary-expression 
postﬁx-expression [expression ] 
postﬁx-expression (argument-expression-listopt ) 
postﬁx-expression . identiﬁer 
postﬁx-expression -> identiﬁer 
postﬁx-expression ++ 
postﬁx-expression -- 
(type-name ) { initializer-list } 
(type-name ) { initializer-list , } 
(6.5.2) argument-expression-list: 
assignment-expression 
argument-expression-list ,assignment-expression 
(6.5.3) unary-expression: 
postﬁx-expression 
++ unary-expression 
-- unary-expression 
unary-operator cast-expression 
sizeof unary-expression 
sizeof ( type-name ) 
(6.5.3) unary-operator: one of 
& * + - ~ ! 
(6.5.4) cast-expression: 
unary-expression 
(type-name )cast-expression 
(6.5.5) multiplicative-expression: 
cast-expression 
multiplicative-expression *cast-expression 
multiplicative-expression /cast-expression 
multiplicative-expression %cast-expression 
§A.2.1 Language syntax summary 409
ISO/IEC 9899:TC2 Committee Draft — May 6, 2005 WG14/N1124 
(6.5.6) additive-expression: 
multiplicative-expression 
additive-expression +multiplicative-expression 
additive-expression -multiplicative-expression 
(6.5.7) shift-expression: 
additive-expression 
shift-expression << additive-expression 
shift-expression >> additive-expression 
(6.5.8) relational-expression: 
shift-expression 
relational-expression < shift-expression 
relational-expression > shift-expression 
relational-expression <= shift-expression 
relational-expression >= shift-expression 
(6.5.9) equality-expression: 
relational-expression 
equality-expression == relational-expression 
equality-expression != relational-expression 
(6.5.10) AND-expression: 
equality-expression 
AND-expression &equality-expression 
(6.5.11) exclusive-OR-expression: 
AND-expression 
exclusive-OR-expression ^AND-expression 
(6.5.12) inclusive-OR-expression: 
exclusive-OR-expression 
inclusive-OR-expression |exclusive-OR-expression 
(6.5.13) logical-AND-expression: 
inclusive-OR-expression 
logical-AND-expression && inclusive-OR-expression 
(6.5.14) logical-OR-expression: 
logical-AND-expression 
logical-OR-expression || logical-AND-expression 
(6.5.15) conditional-expression: 
logical-OR-expression 
logical-OR-expression ?expression :conditional-expression 
410 Language syntax summary §A.2.1
WG14/N1124 CommitteeDraft — May 6, 2005 ISO/IEC 9899:TC2 
(6.5.16) assignment-expression: 
conditional-expression 
unary-expression assignment-operator assignment-expression 
(6.5.16) assignment-operator: one of 
= *= /= %= += -= <<= >>= &= ^= |= 
(6.5.17) expression: 
assignment-expression 
expression ,assignment-expression 
(6.6) constant-expression: 
conditional-expression 
A.2.2 Declarations 
(6.7) declaration: 
declaration-speciﬁers init-declarator-listopt ; 
(6.7) declaration-speciﬁers: 
storage-class-speciﬁer declaration-speciﬁersopt 
type-speciﬁer declaration-speciﬁersopt 
type-qualiﬁer declaration-speciﬁersopt 
function-speciﬁer declaration-speciﬁersopt 
(6.7) init-declarator-list: 
init-declarator 
init-declarator-list ,init-declarator 
(6.7) init-declarator: 
declarator 
declarator =initializer 
(6.7.1) storage-class-speciﬁer: 
typedef 
extern 
static 
auto 
register 
§A.2.2 Language syntax summary 411
ISO/IEC 9899:TC2 Committee Draft — May 6, 2005 WG14/N1124 
(6.7.2) type-speciﬁer: 
void 
char 
short 
int 
long 
float 
double 
signed 
unsigned 
_Bool 
_Complex 
struct-or-union-speciﬁer
enum-speciﬁer 
typedef-name 
(6.7.2.1) struct-or-union-speciﬁer: 
struct-or-union identiﬁeropt {struct-declaration-list } 
struct-or-union identiﬁer 
(6.7.2.1) struct-or-union: 
struct 
union 
(6.7.2.1) struct-declaration-list: 
struct-declaration 
struct-declaration-list struct-declaration 
(6.7.2.1) struct-declaration: 
speciﬁer-qualiﬁer-list struct-declarator-list ; 
(6.7.2.1) speciﬁer-qualiﬁer-list: 
type-speciﬁer speciﬁer-qualiﬁer-listopt 
type-qualiﬁer speciﬁer-qualiﬁer-listopt 
(6.7.2.1) struct-declarator-list: 
struct-declarator 
struct-declarator-list ,struct-declarator 
(6.7.2.1) struct-declarator: 
declarator 
declaratoropt :constant-expression 
412 Language syntax summary §A.2.2
WG14/N1124 CommitteeDraft — May 6, 2005 ISO/IEC 9899:TC2 
(6.7.2.2) enum-speciﬁer: 
enum identiﬁeropt {enumerator-list } 
enum identiﬁeropt {enumerator-list , } 
enum identiﬁer 
(6.7.2.2) enumerator-list: 
enumerator 
enumerator-list ,enumerator 
(6.7.2.2) enumerator: 
enumeration-constant 
enumeration-constant =constant-expression 
(6.7.3) type-qualiﬁer: 
const 
restrict 
volatile 
(6.7.4) function-speciﬁer: 
inline 
(6.7.5) declarator: 
pointeropt direct-declarator 
(6.7.5) direct-declarator: 
identiﬁer 
(declarator ) 
direct-declarator[type-qualiﬁer-listopt assignment-expressionopt ] 
direct-declarator[static type-qualiﬁer-listopt assignment-expression] 
direct-declarator[type-qualiﬁer-list static assignment-expression] 
direct-declarator[type-qualiﬁer-listopt *] 
direct-declarator(parameter-type-list) 
direct-declarator(identiﬁer-listopt ) 
(6.7.5) pointer: 
*type-qualiﬁer-listopt 
*type-qualiﬁer-listopt pointer 
(6.7.5) type-qualiﬁer-list: 
type-qualiﬁer 
type-qualiﬁer-list type-qualiﬁer 
(6.7.5) parameter-type-list: 
parameter-list 
parameter-list ,... 
§A.2.2 Language syntax summary 413
ISO/IEC 9899:TC2 Committee Draft — May 6, 2005 WG14/N1124 
(6.7.5) parameter-list: 
parameter-declaration 
parameter-list ,parameter-declaration 
(6.7.5) parameter-declaration: 
declaration-speciﬁers declarator 
declaration-speciﬁers abstract-declaratoropt 
(6.7.5) identiﬁer-list: 
identiﬁer 
identiﬁer-list ,identiﬁer 
(6.7.6) type-name: 
speciﬁer-qualiﬁer-list abstract-declaratoropt 
(6.7.6) abstract-declarator: 
pointer 
pointeropt direct-abstract-declarator 
(6.7.6) direct-abstract-declarator: 
(abstract-declarator ) 
direct-abstract-declaratoropt [assignment-expressionopt ] 
direct-abstract-declaratoropt [ * ] 
direct-abstract-declaratoropt (parameter-type-listopt ) 
(6.7.7) typedef-name: 
identiﬁer 
(6.7.8) initializer: 
assignment-expression 
{initializer-list } 
{initializer-list , } 
(6.7.8) initializer-list: 
designationopt initializer 
initializer-list ,designationopt initializer 
(6.7.8) designation: 
designator-list = 
(6.7.8) designator-list: 
designator 
designator-list designator 
414 Language syntax summary §A.2.2
WG14/N1124 CommitteeDraft — May 6, 2005 ISO/IEC 9899:TC2 
(6.7.8) designator: 
[constant-expression ] 
.identiﬁer 
A.2.3 Statements 
(6.8) statement: 
labeled-statement 
compound-statement 
expression-statement 
selection-statement 
iteration-statement 
jump-statement 
(6.8.1) labeled-statement: 
identiﬁer :statement 
case constant-expression :statement 
default : statement 
(6.8.2) compound-statement: 
{block-item-listopt } 
(6.8.2) block-item-list: 
block-item 
block-item-list block-item 
(6.8.2) block-item: 
declaration 
statement 
(6.8.3) expression-statement: 
expressionopt ; 
(6.8.4) selection-statement: 
if ( expression )statement 
if ( expression )statement else statement 
switch ( expression )statement 
(6.8.5) iteration-statement: 
while ( expression )statement 
do statement while ( expression ) ; 
for ( expressionopt ;expressionopt ;expressionopt )statement 
for ( declaration expressionopt ;expressionopt )statement 
§A.2.3 Language syntax summary 415
ISO/IEC 9899:TC2 Committee Draft — May 6, 2005 WG14/N1124 
(6.8.6) jump-statement: 
goto identiﬁer ; 
continue ; 
break ; 
return expressionopt ; 
A.2.4 External deﬁnitions 
(6.9) translation-unit: 
external-declaration 
translation-unit external-declaration 
(6.9) external-declaration: 
function-deﬁnition 
declaration 
(6.9.1) function-deﬁnition: 
declaration-speciﬁers declarator declaration-listopt compound-statement 
(6.9.1) declaration-list: 
declaration 
declaration-list declaration