<?xml version="1.0" encoding="UTF-8"?>
<bgf:grammar xmlns:bgf="http://planet-sl.org/bgf">
	<bgf:production>
		<nonterminal>compilation-unit</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>extern-alias-directives</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>using-directives</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>global-attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>namespace-member-declarations</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>namespace-name</nonterminal>
		<bgf:expression>
			<nonterminal>namespace-or-type-name</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>type-name</nonterminal>
		<bgf:expression>
			<nonterminal>namespace-or-type-name</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>namespace-or-type-name</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>type-argument-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>qualified-alias-member</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>namespace-or-type-name</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>.</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>type-argument-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>type</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>value-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>reference-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type-parameter</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>value-type</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>struct-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>enum-type</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>struct-type</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>type-name</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>simple-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>nullable-type</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>simple-type</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>numeric-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>bool</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>numeric-type</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>integral-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>floating-point-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>decimal</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>integral-type</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>sbyte</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>byte</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>short</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>ushort</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>int</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>uint</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>long</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>ulong</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>char</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>floating-point-type</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>float</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>double</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>enum-type</nonterminal>
		<bgf:expression>
			<nonterminal>type-name</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>nullable-type</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>non-nullable-value-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>?</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>non-nullable-value-type</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>enum-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type-name</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>simple-type</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>reference-type</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>class-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>interface-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>array-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>delegate-type</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>class-type</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>type-name</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>object</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>string</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>interface-type</nonterminal>
		<bgf:expression>
			<nonterminal>type-name</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>array-type</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>non-array-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>rank-specifiers</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>non-array-type</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>value-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>class-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>interface-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>delegate-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type-parameter</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>rank-specifiers</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>rank-specifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>rank-specifiers</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>rank-specifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>rank-specifier</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>[</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>dim-separators</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>]</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>dim-separators</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>,</terminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>dim-separators</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>delegate-type</nonterminal>
		<bgf:expression>
			<nonterminal>type-name</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>variable-reference</nonterminal>
		<bgf:expression>
			<nonterminal>expression</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>argument-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>argument</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>argument-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>argument</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>argument</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>ref</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>variable-reference</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>out</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>variable-reference</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>primary-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>array-creation-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>primary-no-array-creation-expression</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>primary-no-array-creation-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>literal</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>simple-name</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>parenthesized-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>member-access</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>invocation-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>element-access</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>this-access</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>base-access</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>post-increment-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>post-decrement-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>object-creation-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>delegate-creation-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>typeof-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>checked-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>unchecked-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>default-value-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>anonymous-method-expression</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>simple-name</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>type-argument-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>parenthesized-expression</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>member-access</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>primary-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>.</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>type-argument-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>predefined-type</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>.</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>type-argument-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>qualified-alias-member</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>.</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>type-argument-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>predefined-type</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>bool</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>byte</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>char</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>decimal</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>double</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>float</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>int</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>long</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>object</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>sbyte</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>short</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>string</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>uint</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>ulong</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>ushort</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>invocation-expression</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>primary-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>argument-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>element-access</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>primary-no-array-creation-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>[</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>expression-list</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>]</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>expression-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>expression-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>this-access</nonterminal>
		<bgf:expression>
			<terminal>this</terminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>base-access</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>base</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>.</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>type-argument-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>base</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>post-increment-expression</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>primary-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>++</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>post-decrement-expression</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>primary-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>--</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>object-creation-expression</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>new</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>argument-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>array-creation-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>new</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>non-array-type</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>rank-specifiers</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>array-initializer</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>new</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>array-type</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>array-initializer</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>delegate-creation-expression</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>new</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>delegate-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>typeof-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>typeof</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>typeof</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>unbound-type-name</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>typeof</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>void</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>unbound-type-name</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>generic-dimension-specifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>::</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>generic-dimension-specifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>unbound-type-name</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>.</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>generic-dimension-specifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>generic-dimension-specifier</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>&lt;</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>commas</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>&gt;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>commas</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>,</terminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>commas</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>checked-expression</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>checked</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>unchecked-expression</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>unchecked</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>default-value-expression</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>default</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>anonymous-method-expression</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>delegate</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>anonymous-method-signature</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>block</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>anonymous-method-signature</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>anonymous-method-parameter-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>anonymous-method-parameter-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>anonymous-method-parameter</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>anonymous-method-parameter-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>anonymous-method-parameter</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>anonymous-method-parameter</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>parameter-modifier</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>unary-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>primary-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>+</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>unary-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>-</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>unary-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>!</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>unary-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>~</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>unary-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>pre-increment-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>pre-decrement-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>cast-expression</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>pre-increment-expression</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>++</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>unary-expression</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>pre-decrement-expression</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>--</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>unary-expression</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>cast-expression</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>unary-expression</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>multiplicative-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>unary-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>multiplicative-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>*</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>unary-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>multiplicative-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>/</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>unary-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>multiplicative-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>%</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>unary-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>additive-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>multiplicative-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>additive-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>+</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>multiplicative-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>additive-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>-</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>multiplicative-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>shift-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>additive-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>shift-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&lt;&lt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>additive-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>shift-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>right-shift</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>additive-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>relational-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>shift-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>relational-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&lt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>shift-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>relational-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&gt;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>shift-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>relational-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&lt;=</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>shift-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>relational-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&gt;=</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>shift-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>relational-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>is</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>relational-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>as</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>equality-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>relational-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>equality-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>==</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>relational-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>equality-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>!=</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>relational-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>and-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>equality-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>and-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&amp;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>equality-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>exclusive-or-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>and-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>exclusive-or-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>^</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>and-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>inclusive-or-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>exclusive-or-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>inclusive-or-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>|</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>exclusive-or-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>conditional-and-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>inclusive-or-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>conditional-and-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>&amp;&amp;</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>inclusive-or-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>conditional-or-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>conditional-and-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>conditional-or-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>||</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>conditional-and-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>null-coalescing-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>conditional-or-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>conditional-or-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>??</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>null-coalescing-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>conditional-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>null-coalescing-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>null-coalescing-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>?</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>:</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>assignment</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>unary-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>assignment-operator</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>expression</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>assignment-operator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>+=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>-=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>*=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>/=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>%=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&amp;=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>|=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>^=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&lt;&lt;=</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>right-shift-assignment</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>conditional-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>assignment</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>constant-expression</nonterminal>
		<bgf:expression>
			<nonterminal>expression</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>boolean-expression</nonterminal>
		<bgf:expression>
			<nonterminal>expression</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>statement</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>labeled-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>declaration-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>embedded-statement</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>embedded-statement</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>block</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>empty-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>expression-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>selection-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>iteration-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>jump-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>try-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>checked-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>unchecked-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>lock-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>using-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>yield-statement</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>block</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>{</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>statement-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>}</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>statement-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>statement-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>statement</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>empty-statement</nonterminal>
		<bgf:expression>
			<terminal>;</terminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>labeled-statement</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>:</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>statement</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>declaration-statement</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>local-variable-declaration</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>local-constant-declaration</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>local-variable-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>local-variable-declarators</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>local-variable-declarators</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>local-variable-declarator</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>local-variable-declarators</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>local-variable-declarator</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>local-variable-declarator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>=</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>local-variable-initializer</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>local-variable-initializer</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>array-initializer</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>local-constant-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>const</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>constant-declarators</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>constant-declarators</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>constant-declarator</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>constant-declarators</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>constant-declarator</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>constant-declarator</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>=</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>constant-expression</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>expression-statement</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>statement-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>statement-expression</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>invocation-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>object-creation-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>assignment</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>post-increment-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>post-decrement-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>pre-increment-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>pre-decrement-expression</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>selection-statement</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>if-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>switch-statement</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>if-statement</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>if</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>boolean-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>embedded-statement</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>if</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>boolean-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>embedded-statement</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>else</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>embedded-statement</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>switch-statement</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>switch</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>switch-block</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>switch-block</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>{</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>switch-sections</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>}</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>switch-sections</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>switch-section</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>switch-sections</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>switch-section</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>switch-section</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>switch-labels</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>statement-list</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>switch-labels</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>switch-label</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>switch-labels</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>switch-label</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>switch-label</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>case</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>constant-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>:</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>default</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>:</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>iteration-statement</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>while-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>do-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>for-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>foreach-statement</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>while-statement</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>while</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>boolean-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>embedded-statement</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>do-statement</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>do</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>embedded-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>while</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>boolean-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>for-statement</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>for</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>for-initializer</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>for-condition</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>for-iterator</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>embedded-statement</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>for-initializer</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>local-variable-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>statement-expression-list</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>for-condition</nonterminal>
		<bgf:expression>
			<nonterminal>boolean-expression</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>for-iterator</nonterminal>
		<bgf:expression>
			<nonterminal>statement-expression-list</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>statement-expression-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>statement-expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>statement-expression-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>statement-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>foreach-statement</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>foreach</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>in</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>embedded-statement</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>jump-statement</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>break-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>continue-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>goto-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>return-statement</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>throw-statement</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>break-statement</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>break</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>continue-statement</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>continue</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>goto-statement</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>goto</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>goto</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>case</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>constant-expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>goto</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>default</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>return-statement</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>return</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>throw-statement</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>throw</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>try-statement</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>try</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>block</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>catch-clauses</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>try</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>block</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>catch-clauses</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>finally-clause</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>catch-clauses</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>specific-catch-clauses</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>specific-catch-clauses</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>general-catch-clause</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>specific-catch-clauses</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>specific-catch-clause</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>specific-catch-clauses</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>specific-catch-clause</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>specific-catch-clause</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>catch</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>class-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>block</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>general-catch-clause</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>catch</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>block</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>finally-clause</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>finally</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>block</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>checked-statement</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>checked</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>block</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>unchecked-statement</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>unchecked</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>block</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>lock-statement</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>lock</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>embedded-statement</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>using-statement</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>using</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>resource-acquisition</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>embedded-statement</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>resource-acquisition</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>local-variable-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>expression</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>yield-statement</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>yield</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>return</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>expression</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>yield</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>break</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>namespace-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>namespace</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>qualified-identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>namespace-body</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>qualified-identifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>qualified-identifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>.</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>namespace-body</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>{</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>extern-alias-directives</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>using-directives</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>namespace-member-declarations</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>}</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>extern-alias-directives</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>extern-alias-directive</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>extern-alias-directives</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>extern-alias-directive</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>extern-alias-directive</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>extern</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>alias</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>using-directives</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>using-directive</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>using-directives</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>using-directive</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>using-directive</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>using-alias-directive</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>using-namespace-directive</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>using-alias-directive</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>using</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>=</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>namespace-or-type-name</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>using-namespace-directive</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>using</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>namespace-name</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>namespace-member-declarations</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>namespace-member-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>namespace-member-declarations</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>namespace-member-declaration</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>namespace-member-declaration</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>namespace-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type-declaration</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>type-declaration</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>class-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>struct-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>interface-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>enum-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>delegate-declaration</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>qualified-alias-member</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>::</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>type-argument-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>class-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>class-modifiers</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<terminal>partial</terminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>class</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>type-parameter-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>class-base</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>type-parameter-constraints-clauses</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>class-body</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>class-modifiers</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>class-modifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>class-modifiers</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>class-modifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>class-modifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>new</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>public</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>protected</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>internal</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>private</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>abstract</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>sealed</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>static</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>class-base</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>:</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>class-type</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>:</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>interface-type-list</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>:</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>class-type</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>interface-type-list</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>interface-type-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>interface-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>interface-type-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>interface-type</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>class-body</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>{</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>class-member-declarations</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>}</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>class-member-declarations</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>class-member-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>class-member-declarations</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>class-member-declaration</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>class-member-declaration</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>constant-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>field-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>method-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>property-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>event-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>indexer-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>operator-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>constructor-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>finalizer-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>static-constructor-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type-declaration</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>constant-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>constant-modifiers</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>const</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>constant-declarators</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>constant-modifiers</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>constant-modifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>constant-modifiers</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>constant-modifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>constant-modifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>new</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>public</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>protected</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>internal</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>private</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>field-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>field-modifiers</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>variable-declarators</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>field-modifiers</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>field-modifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>field-modifiers</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>field-modifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>field-modifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>new</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>public</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>protected</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>internal</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>private</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>static</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>readonly</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>volatile</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>variable-declarators</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>variable-declarator</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>variable-declarators</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>variable-declarator</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>variable-declarator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>=</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>variable-initializer</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>variable-initializer</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>expression</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>array-initializer</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>method-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>method-header</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>method-body</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>method-header</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>method-modifiers</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>return-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>member-name</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>type-parameter-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>formal-parameter-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>type-parameter-constraints-clauses</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>method-modifiers</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>method-modifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>method-modifiers</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>method-modifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>method-modifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>new</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>public</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>protected</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>internal</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>private</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>static</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>virtual</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>sealed</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>override</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>abstract</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>extern</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>return-type</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>void</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>member-name</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>interface-type</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>.</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>method-body</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>block</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>formal-parameter-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>fixed-parameters</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>fixed-parameters</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>parameter-array</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>parameter-array</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>fixed-parameters</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>fixed-parameter</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>fixed-parameters</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>fixed-parameter</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>fixed-parameter</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>parameter-modifier</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>parameter-modifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>ref</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>out</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>parameter-array</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>params</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>array-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>property-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>property-modifiers</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>member-name</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>{</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>accessor-declarations</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>}</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>property-modifiers</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>property-modifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>property-modifiers</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>property-modifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>property-modifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>new</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>public</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>protected</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>internal</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>private</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>static</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>virtual</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>sealed</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>override</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>abstract</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>extern</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>accessor-declarations</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>get-accessor-declaration</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>set-accessor-declaration</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>set-accessor-declaration</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>get-accessor-declaration</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>get-accessor-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>accessor-modifier</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>get</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>accessor-body</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>set-accessor-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>accessor-modifier</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>set</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>accessor-body</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>accessor-modifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>protected</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>internal</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>private</terminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>protected</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>internal</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>internal</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>protected</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>accessor-body</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>block</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>event-declaration</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>attributes</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>event-modifiers</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>event</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>variable-declarators</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>attributes</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>event-modifiers</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>event</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>member-name</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>{</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>event-accessor-declarations</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>}</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>event-modifiers</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>event-modifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>event-modifiers</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>event-modifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>event-modifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>new</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>public</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>protected</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>internal</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>private</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>static</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>virtual</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>sealed</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>override</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>abstract</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>extern</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>event-accessor-declarations</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>add-accessor-declaration</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>remove-accessor-declaration</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>remove-accessor-declaration</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>add-accessor-declaration</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>add-accessor-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>add</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>block</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>remove-accessor-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>remove</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>block</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>indexer-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>indexer-modifiers</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>indexer-declarator</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>{</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>accessor-declarations</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>}</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>indexer-modifiers</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>indexer-modifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>indexer-modifiers</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>indexer-modifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>indexer-modifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>new</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>public</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>protected</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>internal</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>private</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>virtual</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>sealed</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>override</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>abstract</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>extern</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>indexer-declarator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>type</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>this</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>formal-parameter-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>type</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>interface-type</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>.</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>this</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>formal-parameter-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>operator-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>operator-modifiers</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>operator-declarator</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>operator-body</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>operator-modifiers</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>operator-modifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>operator-modifiers</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>operator-modifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>operator-modifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>public</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>static</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>extern</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>operator-declarator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>unary-operator-declarator</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>binary-operator-declarator</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>conversion-operator-declarator</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>unary-operator-declarator</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>operator</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>overloadable-unary-operator</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>overloadable-unary-operator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>+</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>-</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>!</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>~</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>++</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>--</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>true</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>false</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>binary-operator-declarator</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>operator</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>overloadable-binary-operator</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>,</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>overloadable-binary-operator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>+</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>-</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>*</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>/</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>%</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&amp;</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>|</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>^</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&lt;&lt;</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>right-shift</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>==</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>!=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&gt;</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&lt;</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&gt;=</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&lt;=</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>conversion-operator-declarator</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>implicit</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>operator</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>explicit</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>operator</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>operator-body</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>block</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>constructor-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>constructor-modifiers</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>constructor-declarator</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>constructor-body</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>constructor-modifiers</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>constructor-modifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>constructor-modifiers</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>constructor-modifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>constructor-modifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>public</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>protected</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>internal</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>private</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>extern</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>constructor-declarator</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>formal-parameter-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>constructor-initializer</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>constructor-initializer</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>:</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>base</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>argument-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>:</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>this</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>argument-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>constructor-body</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>block</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>static-constructor-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>static-constructor-modifiers</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>static-constructor-body</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>static-constructor-modifiers</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>extern</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>static</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>static</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<terminal>extern</terminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>static-constructor-body</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>block</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>finalizer-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<terminal>extern</terminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>~</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>finalizer-body</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>finalizer-body</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>block</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>struct-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>struct-modifiers</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<terminal>partial</terminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>struct</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>type-parameter-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>struct-interfaces</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>type-parameter-constraints-clauses</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>struct-body</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>struct-modifiers</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>struct-modifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>struct-modifiers</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>struct-modifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>struct-modifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>new</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>public</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>protected</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>internal</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>private</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>struct-interfaces</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>:</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>interface-type-list</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>struct-body</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>{</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>struct-member-declarations</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>}</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>struct-member-declarations</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>struct-member-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>struct-member-declarations</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>struct-member-declaration</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>struct-member-declaration</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>constant-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>field-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>method-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>property-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>event-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>indexer-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>operator-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>constructor-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>static-constructor-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type-declaration</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>array-initializer</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>{</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>variable-initializer-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>}</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>{</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>variable-initializer-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>}</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>variable-initializer-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>variable-initializer</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>variable-initializer-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>variable-initializer</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>interface-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>interface-modifiers</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<terminal>partial</terminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>interface</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>type-parameter-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>interface-base</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>type-parameter-constraints-clauses</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>interface-body</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>interface-modifiers</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>interface-modifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>interface-modifiers</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>interface-modifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>interface-modifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>new</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>public</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>protected</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>internal</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>private</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>interface-base</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>:</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>interface-type-list</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>interface-body</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>{</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>interface-member-declarations</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>}</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>interface-member-declarations</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>interface-member-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>interface-member-declarations</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>interface-member-declaration</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>interface-member-declaration</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>interface-method-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>interface-property-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>interface-event-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>interface-indexer-declaration</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>interface-method-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<terminal>new</terminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>return-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>type-parameter-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>formal-parameter-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>type-parameter-constraints-clauses</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>interface-property-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<terminal>new</terminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>{</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>interface-accessors</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>}</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>interface-accessors</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>attributes</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>get</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>attributes</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>set</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>attributes</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>get</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>attributes</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>set</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>attributes</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>set</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>attributes</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>get</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>interface-event-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<terminal>new</terminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>event</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>interface-indexer-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<terminal>new</terminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>this</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>[</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>formal-parameter-list</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>]</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>{</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>interface-accessors</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>}</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>enum-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>enum-modifiers</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>enum</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>enum-base</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>enum-body</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<terminal>;</terminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>enum-base</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>:</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>integral-type</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>enum-body</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>{</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>enum-member-declarations</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>}</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>{</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>enum-member-declarations</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>}</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>enum-modifiers</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>enum-modifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>enum-modifiers</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>enum-modifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>enum-modifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>new</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>public</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>protected</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>internal</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>private</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>enum-member-declarations</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>enum-member-declaration</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>enum-member-declarations</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>enum-member-declaration</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>enum-member-declaration</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>attributes</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>attributes</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>identifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>=</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>constant-expression</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>delegate-declaration</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attributes</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>delegate-modifiers</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>delegate</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>return-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>type-parameter-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>formal-parameter-list</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>type-parameter-constraints-clauses</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
				<bgf:expression>
					<terminal>;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>delegate-modifiers</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>delegate-modifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>delegate-modifiers</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>delegate-modifier</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>delegate-modifier</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>new</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>public</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>protected</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>internal</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>private</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>global-attributes</nonterminal>
		<bgf:expression>
			<nonterminal>global-attribute-sections</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>global-attribute-sections</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>global-attribute-section</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>global-attribute-sections</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>global-attribute-section</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>global-attribute-section</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>global-attribute-target-specifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>attribute-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>global-attribute-target-specifier</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>attribute-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>global-attribute-target-specifier</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>global-attribute-target</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>:</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>global-attribute-target</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>keyword</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>attributes</nonterminal>
		<bgf:expression>
			<nonterminal>attribute-sections</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>attribute-sections</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>attribute-section</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>attribute-sections</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>attribute-section</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>attribute-section</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>attribute-target-specifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>attribute-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>[</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>attribute-target-specifier</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>attribute-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>]</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>attribute-target-specifier</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>attribute-target</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>:</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>attribute-target</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>keyword</nonterminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>attribute-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>attribute</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>attribute-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>attribute</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>attribute</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>attribute-name</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<optional>
						<bgf:expression>
							<nonterminal>attribute-arguments</nonterminal>
						</bgf:expression>
					</optional>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>attribute-name</nonterminal>
		<bgf:expression>
			<nonterminal>type-name</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>attribute-arguments</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>positional-argument-list</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>positional-argument-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>named-argument-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<terminal>(</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>named-argument-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>)</terminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>positional-argument-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>positional-argument</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>positional-argument-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>positional-argument</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>positional-argument</nonterminal>
		<bgf:expression>
			<nonterminal>attribute-argument-expression</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>named-argument-list</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>named-argument</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>named-argument-list</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>named-argument</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>named-argument</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<nonterminal>identifier</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>=</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>attribute-argument-expression</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>attribute-argument-expression</nonterminal>
		<bgf:expression>
			<nonterminal>expression</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>type-parameter-list</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>&lt;</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type-parameters</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&gt;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>type-parameters</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>attributes</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-parameter</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>type-parameters</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<optional>
								<bgf:expression>
									<nonterminal>attributes</nonterminal>
								</bgf:expression>
							</optional>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-parameter</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>type-parameter</nonterminal>
		<bgf:expression>
			<nonterminal>identifier</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>type-argument-list</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>&lt;</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type-arguments</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>&gt;</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>type-arguments</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>type-argument</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>type-arguments</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-argument</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>type-argument</nonterminal>
		<bgf:expression>
			<nonterminal>type</nonterminal>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>type-parameter-constraints-clauses</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>type-parameter-constraints-clause</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>type-parameter-constraints-clauses</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-parameter-constraints-clause</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>type-parameter-constraints-clause</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>where</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type-parameter</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>:</terminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type-parameter-constraints</nonterminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>type-parameter-constraints</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>primary-constraint</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>secondary-constraints</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>constructor-constraint</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>primary-constraint</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>secondary-constraints</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>primary-constraint</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>constructor-constraint</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>secondary-constraints</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>constructor-constraint</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>primary-constraint</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>secondary-constraints</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>constructor-constraint</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>primary-constraint</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>class-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>class</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>struct</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>secondary-constraints</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<nonterminal>interface-type</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<nonterminal>type-parameter</nonterminal>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>secondary-constraints</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>interface-type</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
				<bgf:expression>
					<sequence>
						<bgf:expression>
							<nonterminal>secondary-constraints</nonterminal>
						</bgf:expression>
						<bgf:expression>
							<terminal>,</terminal>
						</bgf:expression>
						<bgf:expression>
							<nonterminal>type-parameter</nonterminal>
						</bgf:expression>
					</sequence>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>constructor-constraint</nonterminal>
		<bgf:expression>
			<sequence>
				<bgf:expression>
					<terminal>new</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>(</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>)</terminal>
				</bgf:expression>
			</sequence>
		</bgf:expression>
	</bgf:production>
	<bgf:production>
		<nonterminal>keyword</nonterminal>
		<bgf:expression>
			<choice>
				<bgf:expression>
					<terminal>abstract</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>as</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>base</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>bool</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>break</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>byte</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>case</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>catch</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>char</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>checked</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>class</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>const</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>continue</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>decimal</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>default</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>delegate</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>do</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>double</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>else</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>enum</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>event</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>explicit</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>extern</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>false</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>finally</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>fixed</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>float</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>for</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>foreach</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>goto</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>if</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>implicit</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>in</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>int</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>interface</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>internal</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>is</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>lock</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>long</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>namespace</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>new</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>null</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>object</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>operator</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>out</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>override</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>params</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>private</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>protected</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>public</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>readonly</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>ref</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>return</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>sbyte</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>sealed</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>short</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>sizeof</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>stackalloc</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>static</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>string</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>struct</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>switch</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>this</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>throw</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>true</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>try</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>typeof</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>uint</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>ulong</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>unchecked</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>unsafe</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>ushort</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>using</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>virtual</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>void</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>volatile</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>while</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>get</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>set</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>yield</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>add</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>remove</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>alias</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>partial</terminal>
				</bgf:expression>
				<bgf:expression>
					<terminal>where</terminal>
				</bgf:expression>
			</choice>
		</bgf:expression>
	</bgf:production>
</bgf:grammar>
